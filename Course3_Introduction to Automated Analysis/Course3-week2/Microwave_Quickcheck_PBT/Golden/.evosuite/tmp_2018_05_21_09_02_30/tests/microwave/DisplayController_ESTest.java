/*
 * This file was automatically generated by EvoSuite
 * Mon May 21 14:04:59 GMT 2018
 */

package microwave;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import microwave.DisplayController;
import microwave.ModeController;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DisplayController_ESTest extends DisplayController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(0);
      // Undeclared exception!
      try { 
        displayController0.setTimeToCook(6000);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setTimeToCook: Time must be positive and < 6000 seconds
         //
         assertThrownBy("microwave.DisplayController", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DisplayController displayController0 = new DisplayController((-2438));
      displayController0.setTimeToCook(0);
      assertEquals(0, displayController0.timeToCook());
      assertTrue(displayController0.secondElapsed());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DisplayController displayController0 = new DisplayController((-2438));
      displayController0.setTimeToCook(9);
      assertEquals(9, displayController0.timeToCook());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(158);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        displayController0.setDigits(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Wrong number of digits!
         //
         assertThrownBy("microwave.DisplayController", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(1446);
      displayController0.digitPressed(9);
      assertTrue(displayController0.secondElapsed());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(0);
      displayController0.digitPressed(0);
      assertEquals(0, displayController0.timeToCook());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(39);
      byte[] byteArray0 = displayController0.getDigits();
      displayController0.setDigits(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertTrue(displayController0.secondElapsed());
      assertEquals(0, displayController0.timeToCook());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DisplayController displayController0 = new DisplayController((-826));
      displayController0.setTimeToCook(715);
      int int0 = displayController0.timeToCook();
      assertEquals(715, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(39);
      int int0 = displayController0.getTickRateInHz();
      assertTrue(displayController0.secondElapsed());
      assertEquals(39, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DisplayController displayController0 = new DisplayController((-2649));
      // Undeclared exception!
      try { 
        displayController0.tick((ModeController.Mode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("microwave.DisplayController", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(0);
      ModeController.Mode modeController_Mode0 = ModeController.Mode.Cooking;
      // Undeclared exception!
      try { 
        displayController0.tick(modeController_Mode0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         assertThrownBy("microwave.DisplayController", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(1);
      displayController0.setTimeToCook(101);
      assertEquals(101, displayController0.timeToCook());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(1);
      displayController0.setTickRateInHz((-1367));
      assertTrue(displayController0.secondElapsed());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(10);
      // Undeclared exception!
      try { 
        displayController0.setDigits((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("microwave.DisplayController", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(278);
      // Undeclared exception!
      try { 
        displayController0.setDigits((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("microwave.DisplayController", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(486);
      displayController0.setTickRateInHz(0);
      // Undeclared exception!
      try { 
        displayController0.secondElapsed();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         assertThrownBy("microwave.DisplayController", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(0);
      int int0 = displayController0.getTickRateInHz();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DisplayController displayController0 = new DisplayController((-104));
      byte[] byteArray0 = displayController0.getDigits();
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertTrue(displayController0.secondElapsed());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(3008);
      assertTrue(displayController0.secondElapsed());
      
      ModeController.Mode modeController_Mode0 = ModeController.Mode.Cooking;
      displayController0.tick(modeController_Mode0);
      boolean boolean0 = displayController0.secondElapsed();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(1);
      boolean boolean0 = displayController0.secondElapsed();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(1620);
      displayController0.clearDigitPressed();
      assertTrue(displayController0.secondElapsed());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(23);
      // Undeclared exception!
      try { 
        displayController0.setTimeToCook(6007);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setTimeToCook: Time must be positive and < 6000 seconds
         //
         assertThrownBy("microwave.DisplayController", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DisplayController displayController0 = new DisplayController((-2438));
      // Undeclared exception!
      try { 
        displayController0.setTimeToCook((-2438));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setTimeToCook: Time must be positive and < 6000 seconds
         //
         assertThrownBy("microwave.DisplayController", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(0);
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)34;
      // Undeclared exception!
      try { 
        displayController0.setDigits(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // digits must be between 0..9
         //
         assertThrownBy("microwave.DisplayController", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-116);
      DisplayController displayController0 = new DisplayController((int) (byte)5);
      // Undeclared exception!
      try { 
        displayController0.setDigits(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // digits must be between 0..9
         //
         assertThrownBy("microwave.DisplayController", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DisplayController displayController0 = new DisplayController((-826));
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        displayController0.setDigits(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Wrong number of digits!
         //
         assertThrownBy("microwave.DisplayController", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(39);
      ModeController.Mode modeController_Mode0 = ModeController.Mode.Cooking;
      displayController0.setTickRateInHz(1);
      displayController0.setTimeToCook(60);
      displayController0.tick(modeController_Mode0);
      assertEquals(59, displayController0.timeToCook());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(3);
      displayController0.setTimeToCook(3);
      ModeController.Mode modeController_Mode0 = ModeController.Mode.Cooking;
      displayController0.setTickRateInHz((-1));
      displayController0.tick(modeController_Mode0);
      assertEquals(2, displayController0.timeToCook());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DisplayController displayController0 = new DisplayController((-134));
      ModeController.Mode modeController_Mode0 = ModeController.Mode.Setup;
      displayController0.digitPressed(5);
      displayController0.tick(modeController_Mode0);
      assertEquals(5, displayController0.timeToCook());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DisplayController displayController0 = new DisplayController((int) (byte) (-16));
      ModeController.Mode modeController_Mode0 = ModeController.Mode.Suspended;
      displayController0.tick(modeController_Mode0);
      assertTrue(displayController0.secondElapsed());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DisplayController displayController0 = new DisplayController((-134));
      ModeController.Mode modeController_Mode0 = ModeController.Mode.Setup;
      displayController0.tick(modeController_Mode0);
      assertEquals(0, displayController0.timeToCook());
      assertTrue(displayController0.secondElapsed());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(3);
      ModeController.Mode modeController_Mode0 = ModeController.Mode.Cooking;
      displayController0.setTickRateInHz((-1));
      displayController0.tick(modeController_Mode0);
      assertTrue(displayController0.secondElapsed());
      assertEquals(0, displayController0.timeToCook());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DisplayController displayController0 = new DisplayController((-134));
      ModeController.Mode modeController_Mode0 = ModeController.Mode.Setup;
      displayController0.clearKeyPressed(modeController_Mode0);
      assertTrue(displayController0.secondElapsed());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(3);
      ModeController.Mode modeController_Mode0 = ModeController.Mode.Cooking;
      displayController0.clearKeyPressed(modeController_Mode0);
      assertTrue(displayController0.secondElapsed());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(39);
      ModeController.Mode modeController_Mode0 = ModeController.Mode.Suspended;
      displayController0.clearKeyPressed(modeController_Mode0);
      assertTrue(displayController0.secondElapsed());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(3);
      assertTrue(displayController0.secondElapsed());
      
      ModeController.Mode modeController_Mode0 = ModeController.Mode.Cooking;
      displayController0.tick(modeController_Mode0);
      displayController0.tick(modeController_Mode0);
      assertFalse(displayController0.secondElapsed());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DisplayController displayController0 = new DisplayController(39);
      displayController0.digitPressed(39);
      assertTrue(displayController0.secondElapsed());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DisplayController displayController0 = new DisplayController((-826));
      displayController0.digitPressed((-826));
      assertTrue(displayController0.secondElapsed());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DisplayController displayController0 = new DisplayController((-826));
      int int0 = displayController0.timeToCook();
      assertTrue(displayController0.secondElapsed());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DisplayController displayController0 = new DisplayController((-1903));
      int int0 = displayController0.getTickRateInHz();
      assertTrue(displayController0.secondElapsed());
      assertEquals((-1903), int0);
  }
}
